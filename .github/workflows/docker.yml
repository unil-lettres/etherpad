name: docker
on:
  push:
    branches:
      - "development"
      - "main"
env:
  ETHERPAD_REPOSITORY: ether/etherpad-lite
  ETHERPAD_TAG: 2.2.5
  DOCKERHUB_REPOSITORY: unillett/etherpad

jobs:
  docker:
    name: Build & Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ env.ETHERPAD_REPOSITORY }}
          ref: ${{ env.ETHERPAD_TAG }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push latest version
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          target: production
          build-args: |
            ETHERPAD_PLUGINS=ep_headings2
            INSTALL_SOFFICE=true
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKERHUB_REPOSITORY }}:${{ github.ref == 'refs/heads/main' && 'latest' || 'latest-stage' }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPOSITORY }}:${{ github.ref == 'refs/heads/main' && 'latest' || 'latest-stage' }}
          cache-to: type=inline

      - name: Build and push tagged version
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/main'
        with:
          context: ./
          file: ./Dockerfile
          target: production
          build-args: |
            ETHERPAD_PLUGINS=ep_headings2
            INSTALL_ABIWORD=true
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKERHUB_REPOSITORY }}:${{ env.ETHERPAD_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPOSITORY }}:latest
          cache-to: type=inline

  description:
    name: Update description
    runs-on: ubuntu-latest
    needs: docker
    if: success()
    continue-on-error: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_REPOSITORY }}
